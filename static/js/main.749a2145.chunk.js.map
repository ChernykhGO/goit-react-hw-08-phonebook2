{"version":3,"sources":["components/redux/auth/auth-operations.js","components/redux/auth/auth-selectors.js","components/Navigation.js","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/views/HomeViews.js","components/views/LoginView.js","components/views/RegisterView.js","components/redux/actions.js","components/redux/selectors.js","components/ContactList/ContactList.js","components/redux/operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/views/ContactsView.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","components/redux/reducer.js","components/redux/auth/auth-slice.js","components/redux/store.js","index.js","components/ContactList/ContactList.module.css"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","auth","persistedToken","rejectWithValue","set","get","console","log","operations","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","name","getUserEmail","email","getisFetchingUser","isFetchingUser","styles","link","display","textDecoration","fontWeight","color","activeLink","Navigation","useSelector","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","UserMenu","dispatch","useDispatch","type","onClick","authOperations","marginLeft","AuthNav","href","underline","AppBarComponent","AppBar","Toolbar","Typography","variant","flexGrow","component","marginTop","title","textAlign","HomeView","LoginView","useState","setEmail","password","setPassword","handleChange","target","value","DialogContent","onSubmit","e","preventDefault","autoComplete","TextField","autoFocus","margin","onChange","Button","RegisterView","setName","id","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","changeFilter","getFilter","phonebook","filter","getVisibleContacts","createSelector","items","allContacts","normalizedFilter","toLowerCase","contact","includes","ContactList","contacts","ondeleteContact","contactId","delete","then","catch","error","className","listContact","map","number","contactItem","ContactForm","setNumber","event","currentTarget","warn","reset","find","alert","addContacts","pattern","required","placeholder","Filter","contactsActions","ContactsView","params","useEffect","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","App","authOpertations","fallback","path","createReducer","action","payload","combineReducers","authSlice","createSlice","initialState","isLoggeIn","extraReducers","fulfilled","pending","isFetchingCurrentUser","rejected","process","authPersistConfig","key","storage","whitelist","blacklist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.749a2145.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    // axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body: { name, email, password }\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nexport const register = createAsyncThunk(\r\n  \"/auth/register\",\r\n  async (credentials) => {\r\n    try {\r\n      const { data } = await axios.post(\"/users/signup\", credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      // TODO: Добавить обработку ошибки error.message\r\n    }\r\n  }\r\n);\r\n\r\n/*\r\n * POST @ /users/login\r\n * body: { email, password }\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = createAsyncThunk(\"auth/login\", async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post(\"/users/login\", credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    // TODO: Добавить обработку ошибки error.message\r\n  }\r\n});\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers: Authorization: Bearer token\r\n * После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = createAsyncThunk(\"auth/logout\", async () => {\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n  } catch (error) {\r\n    // TODO: Добавить обработку ошибки error.message\r\n  }\r\n});\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  \"auth/refresh\",\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const token = state.auth.token;\r\n    // console.log(token);\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      // console.log(\"Токена нет\");\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get(\"/users/current\");\r\n      console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      // TODO: Добавить обработку ошибки error.message\r\n    }\r\n  }\r\n);\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  fetchCurrentUser,\r\n};\r\nexport default operations;\r\n","const getIsLoggedIn = (state) => state.auth.isLoggedIn;\r\nconst getUserEmail = (state) => state.auth.user.email;\r\nconst getUsername = (state) => state.auth.user.name;\r\nconst getisFetchingUser = (state) => state.auth.isFetchingUser;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n  getUserEmail,\r\n  getisFetchingUser,\r\n};\r\n\r\nexport default authSelectors;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport authSelectors from \"./redux/auth/auth-selectors\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    fontWeight: 900,\r\n    color: \"#282c34\",\r\n  },\r\n  activeLink: {\r\n    color: \"#61dafb\",\r\n  },\r\n};\r\n\r\nconst Navigation = () => {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n        Главная\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          style={styles.link}\r\n          activeStyle={styles.activeLink}\r\n        >\r\n          Контакты\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\nimport authOperations from \"../redux/auth/auth-operations\";\r\n// import defaultAvatar from \"./default-avatar.png\";\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n  //   const avatar = defaultAvatar;\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      {/* <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} /> */}\r\n      <span style={styles.name}>Добро пожаловать, {name}</span>\r\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\r\n        Выйти\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    fontWeight: 900,\r\n    color: \"#282c34\",\r\n    marginLeft: \"20px\",\r\n  },\r\n  activeLink: {\r\n    color: \"#61dafb\",\r\n  },\r\n};\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Регистрация\r\n      </NavLink>\r\n      <NavLink\r\n        href=\"#\"\r\n        underline=\"none\"\r\n        to=\"/login\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Логин\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserMenu from \"./UserMenu/UserMenu\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport authSelectors from \".././components/redux/auth/auth-selectors\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\n\r\nexport default function AppBarComponent() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <AppBar>\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" style={{ flexGrow: 1 }} component=\"div\">\r\n          <Navigation />\r\n        </Typography>\r\n        <Typography variant=\"h6\">\r\n          {\" \"}\r\n          {isLoggedIn ? <UserMenu /> : <AuthNav />}{\" \"}\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n    // <header style={styles.header}>\r\n    //   <Navigation />\r\n    //   {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    // </header>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst styles = {\r\n  container: {\r\n    marginTop: \"100px\",\r\n  },\r\n  title: {\r\n    fontWeight: 600,\r\n    textAlign: \"center\",\r\n  },\r\n};\r\nconst HomeView = () => (\r\n  <div style={styles.container}>\r\n    <h1>\r\n      Приветствуем!\r\n      <br />\r\n      Здесь вы можете хранить ваши контакты :)\r\n    </h1>\r\n  </div>\r\n);\r\n\r\nexport default HomeView;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport authOperations from \"../redux/auth/auth-operations\";\r\nimport { TextField, DialogContent, Button } from \"@material-ui/core\";\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Страница логина</h1>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <label>\r\n            Почта\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Пароль\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n\r\n          <Button type=\"submit\">Войти</Button>\r\n        </form>\r\n      </DialogContent>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport authOperations from \"../redux/auth/auth-operations\";\r\nimport { TextField, DialogContent, Button } from \"@material-ui/core\";\r\n\r\nexport default function RegisterView() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        return setName(value);\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    // console.log(name);\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Страница регистрации</h1>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <label>\r\n            Имя\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Почта\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Пароль\r\n            <TextField\r\n              id=\"pass\"\r\n              autoFocus\r\n              margin=\"dense\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n\r\n          <Button type=\"submit\">Зарегистрироваться</Button>\r\n        </form>\r\n      </DialogContent>\r\n    </div>\r\n  );\r\n}\r\n","// import types from \"./types\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n// const addContacts = createAction(\"contacts/add\", (data) => ({\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name: data.name,\r\n//     number: data.number,\r\n//   },\r\n// }));\r\n// const addContacts = (data) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name: data.name,\r\n//     number: data.number,\r\n//   },\r\n// });\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n// export const deleteContacts = createAction(\"contacts/delete\");\r\n// const deleteContacts = createAction(types.DELETE);\r\n// const deleteContacts = (id) => ({\r\n//   type: types.DELETE,\r\n//   payload: id,\r\n// });\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n// const changeFilter = createAction(types.CHANGE_FILTER);\r\n// const changeFilter = (value) => ({\r\n//   type: types.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n// const contactsActions = {\r\n//   // addContacts,\r\n//   deleteContacts,\r\n//   changeFilter,\r\n//   addContactRequest,\r\n//   addContactSuccess,\r\n//   addContactError,\r\n// };\r\n// export default contactsActions;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getFilter = (state) => state.phonebook.filter;\r\nexport const getAllContacts = (state) => state.phonebook.items;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return allContacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\n// export default {\r\n//   getFilter,\r\n//   getAllContacts,\r\n//   getVisibleContacts,\r\n// };\r\n\r\n// const getVisibleContacts = (state) => {\r\n//   const filter = getFilter(state);\r\n//   const allContacts = getAllContacts(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return allContacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// }; перед. с мемоизацией\r\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// import * as contactsActions from \"../redux/actions\";\nimport { deleteContacts } from \"../redux/operations\";\nimport { getVisibleContacts } from \"../redux/selectors\";\nimport style from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = () => {\n  const contacts = useSelector((state) =>\n    // getVisibleContacts(state.phonebook.items, state.phonebook.filter)\n    getVisibleContacts(state)\n  );\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(featchContacts());\n  // }, [dispatch]);\n\n  const ondeleteContact = (id) => dispatch(deleteContacts(id));\n\n  return (\n    <ul className={style.listContact}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={style.contactItem}>\n          <p>\n            &#9742; {name}: {number}\n          </p>\n          <button type=\"button\" onClick={() => ondeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  ondeleteContact: PropTypes.func,\n  contacts: PropTypes.array,\n};\n\n// const getVisibleContacts = (allContacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n// return allContacts.filter((contact) =>\n//   contact.name.toLowerCase().includes(normalizedFilter)\n// );\n// };\n\n// const mapStateToProps = (state) => ({\n//   contacts: getVisibleContacts(state.phonebook.items, state.phonebook.filter),\n// });\n\n// const mapStateToProps = (state) => {\n//   const { filter, items } = state.phonebook;\n//   const normalizedFilter = filter.toLowerCase();\n//   const visibleContacts = getVisibleContacts(items, filter);\n//   return {\n//     contacts: state.phonebook.items,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => ({\n//   ondeleteContact: (id) => dispatch(contactsActions.deleteContacts(id)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","// import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"./actions\";\r\n\r\n// axios.defaults.baseURL = \"http://localhost:4040/\";\r\n\r\nexport const featchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get(`/contacts`);\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\n// export const featchContacts = createAsyncThunk(\r\n//   \"contacts/fetchContacts\",\r\n//   async () => {\r\n//     const { data } = await axios.get(`/contacts`);\r\n//     return data;\r\n//   }\r\n// );\r\n\r\nexport const addContacts = (name, number) => (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post(`/contacts`, contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContacts = (contactId) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\n// export default {\r\n//   addContacts,\r\n//   deleteContacts,\r\n//   featchContacts,\r\n// };\r\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// import ContactsActions from \"../redux/actions\";\nimport { addContacts } from \"../redux/operations\";\n\nfunction ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector((state) => state.phonebook.items);\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    switch (event.target.name) {\n      case \"name\":\n        setName(event.currentTarget.value);\n        break;\n      case \"number\":\n        setNumber(event.currentTarget.value);\n        break;\n\n      default:\n        console.warn(`${event.target.value} not found`);\n    }\n  };\n  const handleAddContact = (event) => {\n    event.preventDefault();\n\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(`${name} is already in contact`);\n    }\n    dispatch(addContacts(name, number));\n    // onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleAddContact}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          value={name}\n          onChange={handleChange}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Name Surname\"\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"111-11-11\"\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  contacts: PropTypes.array,\n  name: PropTypes.string,\n  number: PropTypes.number,\n  handleAddContact: PropTypes.func,\n  handleChange: PropTypes.func,\n};\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onSubmit: (data) => dispatch(ContactsActions.addContacts(data)),\n// });\n\n// export default connect(null, mapDispatchToProps)(ContactForm);\n\n// const formSubmit = (data) => {\n//   // console.log(data);\n//   const newContact = {\n//     id: uuidv4(),\n//     name: data.name,\n//     number: data.number,\n//   };\n//   // console.log(newContact);\n//  (contacts) => [newContact, ...contacts]);\n//   } else {\n//     alert(`${data.name} is already in contact`);\n//   }\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// import { connect } from \"react-redux\";\nimport * as contactsActions from \"../redux/actions\";\nimport { getFilter } from \"../redux/selectors\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(event) =>\n          dispatch(contactsActions.changeFilter(event.target.value))\n        }\n      />\n    </label>\n  );\n};\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\n// const mapStateToProps = (state) => ({\n//   value: state.phonebook.filter,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onChange: (event) =>\n//     dispatch(contactsActions.changeFilter(event.target.value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport { featchContacts } from \"../redux/operations\";\r\n// import authSelectors from \"../redux/auth/auth-selectors\";\r\n\r\nexport default function ContactsView(params) {\r\n  const dispatch = useDispatch();\r\n  // const isLoadingContact = useSelector(contactsSelectors.getLoading);\r\n\r\n  useEffect(() => dispatch(featchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n      {/* {isLoadingContact && <p>Загружаем...</p>} */}\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport authSelectors from \"../components/redux/auth/auth-selectors\";\r\n/**\r\n * 1. Он должен повторять API Route\r\n *  2. Он должен рендерить Route\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на redirectTo\r\n */\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = \"/\",\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport authSelectors from \"./redux/auth/auth-selectors\";\r\n\r\n/**\r\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\r\n * - В противном случае рендерит компонент\r\n *\r\n */\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = \"/contacts\",\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import { Suspense, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport authOpertations from \"./components/redux/auth/auth-operations\";\nimport authSelectors from \"./components/redux/auth/auth-selectors\";\nimport \"./App.css\";\nimport AppBarComponent from \"./components/AppBar\";\nimport { Switch } from \"react-router-dom\";\nimport HomeView from \"./components/views/HomeViews\";\nimport LoginView from \"./components/views/LoginView\";\nimport RegisterView from \"./components/views/RegisterView\";\nimport ContactsView from \"./components/views/ContactsView\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingUser = useSelector(authSelectors.getisFetchingUser);\n\n  useEffect(() => {\n    dispatch(authOpertations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    !isFetchingUser && (\n      <div>\n        <AppBarComponent />\n        <div className=\"App\">\n          <Switch>\n            <Suspense fallback={<p>Загружаем...</p>}>\n              <PublicRoute exact path=\"/\" component={HomeView} />\n              <PublicRoute\n                path=\"/register\"\n                component={RegisterView}\n                restricted\n              />\n              <PublicRoute path=\"/login\" component={LoginView} restricted />\n              <PrivateRoute path=\"/contacts\" component={ContactsView} />\n            </Suspense>\n          </Switch>\n        </div>\n      </div>\n    )\n  );\n}\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n// import actions from \"./actions\";\r\nimport {\r\n  changeFilter,\r\n  addContactSuccess,\r\n  fetchContactError,\r\n  deleteContactSuccess,\r\n  fetchContactSuccess,\r\n  fetchContactRequest,\r\n} from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, action) => action.payload,\r\n  [addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [deleteContactSuccess]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactError]: (_, action) => action.payload,\r\n  [fetchContactRequest]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  error,\r\n});\r\n\r\n// import types from \"./types\";\r\n// console.log(actions.addContacts.type);\r\n\r\n// {\r\n//     phonebook: {\r\n//         items: '',\r\n//         filter: ''\r\n//     }\r\n// }\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter((contact) => contact.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case \"contacts/changeFilter\":\r\n//       return payload;\r\n\r\n//     default:npm i redux\r\n//       return state;\r\n//   }\r\n// };\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport authOperations from \"./auth-operations\";\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggeIn: false,\r\n  isFetchingUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggeIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggeIn = true;\r\n      state.isFetchingUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport contactsReducer from \"./reducer\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport authReducer from \"./auth/auth-slice\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\nconsole.log(process.env.NODE_ENV);\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n  blacklist: [\"filter\"],\r\n};\r\nexport const store = configureStore({\r\n  reducer: {\r\n    // phonebook: persistReducer(phonebookPersistConfig, contactsReducer),\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    phonebook: contactsReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// export default { store, persistor };\r\n\r\n// const rootReducer = combineReducers({\r\n//   // phonebook: contactsReducer,\r\n//   phonebook: persistReducer(persistConfig, contactsReducer),\r\n// });\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n// const rootReducer = combineReducers({\r\n//   phonebook: contactsReducer,\r\n// });\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   composeWithDevTools()\r\n// );\r\n// console.log(getDefaultMiddleware());\r\n// const middlewere = [...getDefaultMiddleware(), logger];\r\n\r\n// const myMiddlewere = (store) => (next) => (action) => {\r\n//   console.log(\"Моя прослойка\", action);\r\n//   next(action);\r\n// };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./components/redux/store\";\nimport { persistor } from \"./components/redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__jly4Y\",\"listContact\":\"ContactList_listContact__2zayP\"};"],"sourceRoot":""}